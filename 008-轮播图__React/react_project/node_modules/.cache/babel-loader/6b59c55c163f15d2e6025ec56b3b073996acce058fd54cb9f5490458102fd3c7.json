{"ast":null,"code":"var _jsxFileName = \"D:\\\\leading_end\\\\daily_study\\\\008-\\u8F6E\\u64AD\\u56FE__React\\\\react_project\\\\src\\\\components\\\\SlidePictures\\\\SlidePictures.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, memo, useRef } from 'react';\nimport './SlidePictures.scss';\n\n/**\r\n * props 的参数\r\n * picturesArr: Array\r\n *      对象数组{src:String, alt:String, index:Number 从零开始}\r\n * circleOrSquare: boolean\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlidePictures = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  const CONTROL_INDEX = 260; // 控制图片的切换速度\n  // 复制第一张图片在最后\n  const picturesArr = [...props.picturesArr, props.picturesArr[0]];\n  const [mouseEnter, setMouseEnter] = useState(false); //鼠标是否悬浮在整个区域上\n  const [pictureShowing, setPictureShowing] = useState(0); //当前展示的是第几张图片\n\n  const picturesUl = useRef(); // 图片外部的ul\n  const circlesContainer = useRef(); // 底部的小圆圈\n  const customChanging = useRef(false); // 是否人为地引起了改变\n  const defaultChanging = useRef(false); // 默认切换图片\n\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const lazyImage = entry.target;\n        lazyImage.src = lazyImage.dataset.src;\n        observer.unobserve(lazyImage);\n      }\n    });\n  });\n\n  // 控制图片切换的方法\n  // (当前所展示的图片索引currentPictureIndex，用于控制是否变换的值controlIndex)\n  // 当currentIndex累加到与controlIndex相等时，会进行图片的切换\n  const changeAction = (currentPictureIndex, controlIndex, currentIndex) => {\n    if (customChanging.current || defaultChanging.current) return;\n    if (currentIndex < controlIndex) {\n      requestAnimationFrame(() => {\n        changeAction(currentPictureIndex, controlIndex, currentIndex + 1);\n      });\n    } else {\n      defaultChanging.current = true;\n      // 如果有 5 张有效的图片，那么length = 6\n      const length = picturesArr.length;\n      const targetIndex = (currentPictureIndex + 1) % length;\n      if (currentPictureIndex === length - 1) {\n        picturesUl.current.classList.remove('ul-transition');\n        setPictureShowing(0);\n        requestAnimationFrame(() => {\n          // 会多走一次requestAnimationFrame，是为了确保 setPictureShowing 完成前没有给 picturesUl 添加 .ul-transition\n          changeAction(0, controlIndex, controlIndex - 1);\n        });\n      } else {\n        if (!picturesUl.current.classList.contains('ul-transition')) {\n          picturesUl.current.classList.add('ul-transition');\n        }\n        setPictureShowing(targetIndex);\n        requestAnimationFrame(() => {\n          changeAction(targetIndex, controlIndex, 1);\n        });\n      }\n    }\n  };\n\n  // 上一张（被gotoDirectly调用）\n  const lastPicutre = customIndex => {\n    customChanging.current = true;\n    const length = picturesArr.length;\n    var targetIndex = customIndex % length;\n    if (targetIndex < 0) {\n      picturesUl.current.classList.remove('ul-transition');\n      let endIndex = length - 1;\n      setPictureShowing(endIndex);\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(endIndex - 2, CONTROL_INDEX, CONTROL_INDEX - 1);\n      });\n    } else {\n      setPictureShowing(targetIndex);\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(targetIndex, CONTROL_INDEX, 1);\n      });\n    }\n  };\n  // 下一张（被gotoDirectly调用）\n  const nextPictures = customIndex => {\n    customChanging.current = true;\n    const length = picturesArr.length;\n    const targetIndex = customIndex % length;\n    if (pictureShowing === length - 1 && customIndex === length) {\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(length - 1, CONTROL_INDEX, CONTROL_INDEX);\n      });\n    } else {\n      setPictureShowing(targetIndex);\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(targetIndex, CONTROL_INDEX, 1);\n      });\n    }\n  };\n  // 点击下方的小圆圈跳转到指定的图片位置，index取值[0 ~ length-2]\n  const gotoDirectly = index => {\n    if (customChanging.current || defaultChanging.current) return;else if (index < pictureShowing) {\n      lastPicutre(index);\n    } else if (index > pictureShowing) {\n      nextPictures(index);\n    }\n  };\n  useEffect(() => {\n    // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\n    const realIndex = pictureShowing >= 5 ? 0 : pictureShowing;\n    // 改变底部小圆圈的样式\n    let circlesArr = Array.from(circlesContainer.current.childNodes);\n    circlesArr.forEach(circle => {\n      circle.style.background = \"\";\n    });\n    circlesArr[realIndex].style.background = \"black\";\n    if (defaultChanging.current) defaultChanging.current = false;\n  }, [pictureShowing]);\n  useEffect(() => {\n    // 配置图片懒加载\n    const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0]);\n    if ('IntersectionObserver' in window) {\n      lazyImages.forEach(image => {\n        observer.observe(image);\n      });\n    } else {\n      lazyImages.forEach(image => {\n        image.src = image.dataset.src;\n      });\n    }\n    // 启动轮播图\n    requestAnimationFrame(() => {\n      changeAction(0, CONTROL_INDEX, 1);\n    });\n  }, []); // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outest\",\n    onMouseOver: () => {\n      setMouseEnter(true);\n    },\n    onMouseLeave: () => {\n      setMouseEnter(false);\n    },\n    children: [mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _left\",\n      src: \"left.png\",\n      alt: \"last\",\n      onClick: () => {\n        gotoDirectly(pictureShowing - 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 30\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: picturesUl,\n      className: \"ul-transition\",\n      style: {\n        transform: `translate(calc(${pictureShowing} * -600px), 0)`\n      },\n      children: picturesArr.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-src\": e.src,\n            alt: e.alt,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mydiv\",\n      ref: circlesContainer,\n      children: props.picturesArr.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-cicle\",\n          onClick: () => {\n            gotoDirectly(i);\n          }\n        }, e.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _right\",\n      src: \"right.png\",\n      alt: \"next\",\n      onClick: () => {\n        gotoDirectly(pictureShowing + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 30\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}, \"bMmT4UNlaX+f9GLWYhriVy+aed8=\")), \"bMmT4UNlaX+f9GLWYhriVy+aed8=\");\n_c2 = SlidePictures;\nexport default SlidePictures;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlidePictures$memo\");\n$RefreshReg$(_c2, \"SlidePictures\");","map":{"version":3,"names":["React","useEffect","useState","memo","useRef","jsxDEV","_jsxDEV","SlidePictures","_s","_c","props","CONTROL_INDEX","picturesArr","mouseEnter","setMouseEnter","pictureShowing","setPictureShowing","picturesUl","circlesContainer","customChanging","defaultChanging","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","changeAction","currentPictureIndex","controlIndex","currentIndex","current","requestAnimationFrame","length","targetIndex","classList","remove","contains","add","lastPicutre","customIndex","endIndex","nextPictures","gotoDirectly","index","realIndex","circlesArr","Array","from","childNodes","circle","style","background","lazyImages","map","e","window","image","observe","className","onMouseOver","onMouseLeave","children","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","transform","i","loading","_c2","$RefreshReg$"],"sources":["D:/leading_end/daily_study/008-轮播图__React/react_project/src/components/SlidePictures/SlidePictures.jsx"],"sourcesContent":["import React, {useEffect, useState, memo, useRef} from 'react'\r\nimport './SlidePictures.scss'\r\n\r\n/**\r\n * props 的参数\r\n * picturesArr: Array\r\n *      对象数组{src:String, alt:String, index:Number 从零开始}\r\n * circleOrSquare: boolean\r\n */\r\nconst SlidePictures = memo((props) => {\r\n    const CONTROL_INDEX = 260;          // 控制图片的切换速度\r\n    // 复制第一张图片在最后\r\n    const picturesArr = [...props.picturesArr, props.picturesArr[0]];\r\n    const [mouseEnter, setMouseEnter] = useState(false);       //鼠标是否悬浮在整个区域上\r\n    const [pictureShowing, setPictureShowing] = useState(0);   //当前展示的是第几张图片\r\n\r\n    const picturesUl = useRef();                    // 图片外部的ul\r\n    const circlesContainer = useRef();              // 底部的小圆圈\r\n    const customChanging = useRef(false);           // 是否人为地引起了改变\r\n    const defaultChanging = useRef(false);          // 默认切换图片\r\n\r\n    const observer = new IntersectionObserver((entries, observer) => {  \r\n        entries.forEach(entry => {  \r\n            if(entry.isIntersecting) {  \r\n                const lazyImage = entry.target;  \r\n                lazyImage.src = lazyImage.dataset.src;\r\n                observer.unobserve(lazyImage);  \r\n            }  \r\n        });  \r\n    });\r\n\r\n    // 控制图片切换的方法\r\n    // (当前所展示的图片索引currentPictureIndex，用于控制是否变换的值controlIndex)\r\n    // 当currentIndex累加到与controlIndex相等时，会进行图片的切换\r\n    const changeAction = (currentPictureIndex, controlIndex, currentIndex) =>{\r\n        if(customChanging.current || defaultChanging.current) return;\r\n        if(currentIndex < controlIndex){\r\n            requestAnimationFrame(() => {changeAction(currentPictureIndex, controlIndex, currentIndex + 1)})\r\n        }else{\r\n            defaultChanging.current = true;\r\n            // 如果有 5 张有效的图片，那么length = 6\r\n            const length = picturesArr.length;\r\n            const targetIndex = (currentPictureIndex + 1) % length;\r\n            if(currentPictureIndex === length - 1){\r\n                picturesUl.current.classList.remove('ul-transition');\r\n                setPictureShowing(0);\r\n                requestAnimationFrame(() => {\r\n                    // 会多走一次requestAnimationFrame，是为了确保 setPictureShowing 完成前没有给 picturesUl 添加 .ul-transition\r\n                    changeAction(0, controlIndex, controlIndex - 1)\r\n                })\r\n            }else{\r\n                if(!picturesUl.current.classList.contains('ul-transition')){\r\n                    picturesUl.current.classList.add('ul-transition');\r\n                }\r\n                setPictureShowing(targetIndex);\r\n                requestAnimationFrame(() => {changeAction(targetIndex, controlIndex, 1)})\r\n            }\r\n        }\r\n    }\r\n\r\n    // 上一张（被gotoDirectly调用）\r\n    const lastPicutre = (customIndex) => {\r\n        customChanging.current = true;\r\n        const length = picturesArr.length;\r\n        var targetIndex = customIndex % length;\r\n        if(targetIndex < 0){\r\n            picturesUl.current.classList.remove('ul-transition');\r\n            let endIndex = length - 1;\r\n            setPictureShowing(endIndex)\r\n            requestAnimationFrame(() => {\r\n                customChanging.current = false;\r\n                changeAction(endIndex - 2, CONTROL_INDEX, CONTROL_INDEX - 1)\r\n            })\r\n        }else{\r\n            setPictureShowing(targetIndex);\r\n            requestAnimationFrame(()=>{\r\n                customChanging.current = false;\r\n                changeAction(targetIndex, CONTROL_INDEX, 1)\r\n            })\r\n        }\r\n    }\r\n    // 下一张（被gotoDirectly调用）\r\n    const nextPictures = (customIndex) => {\r\n        customChanging.current = true;\r\n        const length = picturesArr.length;\r\n        const targetIndex = customIndex % length;\r\n        if(pictureShowing === length - 1 && customIndex === length){\r\n            requestAnimationFrame(()=>{\r\n                customChanging.current = false;\r\n                changeAction(length - 1, CONTROL_INDEX, CONTROL_INDEX)\r\n            })\r\n        }else{\r\n            setPictureShowing(targetIndex);\r\n            requestAnimationFrame(()=>{\r\n                customChanging.current = false;\r\n                changeAction(targetIndex, CONTROL_INDEX, 1)\r\n            })\r\n        }\r\n    }\r\n    // 点击下方的小圆圈跳转到指定的图片位置，index取值[0 ~ length-2]\r\n    const gotoDirectly = (index) => {\r\n        if(customChanging.current || defaultChanging.current) return;\r\n        else if(index < pictureShowing){\r\n            lastPicutre(index);\r\n        }else if(index > pictureShowing){\r\n            nextPictures(index);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\r\n        const realIndex = pictureShowing >= 5 ? 0 : pictureShowing;\r\n        // 改变底部小圆圈的样式\r\n        let circlesArr = Array.from(circlesContainer.current.childNodes);\r\n        circlesArr.forEach(circle => { circle.style.background = \"\"; })\r\n        circlesArr[realIndex].style.background = \"black\";\r\n        if(defaultChanging.current) defaultChanging.current = false;\r\n    },[pictureShowing])\r\n\r\n    useEffect(()=>{\r\n        // 配置图片懒加载\r\n        const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0])\r\n        if('IntersectionObserver' in window){  \r\n            lazyImages.forEach(image => { observer.observe(image); });  \r\n        }else{\r\n            lazyImages.forEach(image => { image.src = image.dataset.src; });  \r\n        }\r\n        // 启动轮播图\r\n        requestAnimationFrame(() => {changeAction(0, CONTROL_INDEX, 1)})\r\n    },[])   // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\r\n\r\n    return (\r\n        <div className=\"outest\" onMouseOver={() => {setMouseEnter(true)}} onMouseLeave={() => {setMouseEnter(false)}} >\r\n            {/* 向左icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _left\" src=\"left.png\" \r\n                    alt=\"last\" onClick={()=>{gotoDirectly(pictureShowing - 1)}}/> : ''\r\n            }\r\n\r\n            {/* 主要图片 */}\r\n            <ul ref={picturesUl} className='ul-transition' style={{\r\n                transform: `translate(calc(${pictureShowing} * -600px), 0)`\r\n            }}>\r\n            {\r\n                picturesArr.map((e, i) => {\r\n                    return (<li key={i}>\r\n                        <img data-src={e.src} alt={e.alt} loading='lazy'/>\r\n                    </li>)\r\n                })\r\n            }\r\n            </ul>\r\n\r\n            {/* 底部小圆圈的设置 */}\r\n            <div className=\"mydiv\" ref={circlesContainer}>\r\n                {\r\n                    props.picturesArr.map((e, i) =>{\r\n                        return (<div\r\n                            className=\"empty-cicle\" key={e.index} onClick={()=>{gotoDirectly(i)}}>\r\n                            </div>)\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {/* 向右icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _right\" src=\"right.png\" alt=\"next\" \r\n                    onClick={()=>{gotoDirectly(pictureShowing + 1)}}/> : ''\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SlidePictures;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}