{"ast":null,"code":"var _jsxFileName = \"D:\\\\leading_end\\\\daily_study\\\\008-\\u8F6E\\u64AD\\u56FE__React\\\\react_project\\\\src\\\\components\\\\SlidePictures\\\\SlidePictures.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, memo, useRef } from 'react';\nimport './SlidePictures.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlidePictures = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  const picturesArr = props.picturesArr;\n  const [mouseEnter, setMouseEnter] = useState(false); //鼠标是否悬浮在整个区域上\n  const [pictureShowing, setPictureShowing] = useState(0); //当前展示的是第几张图片，用来更新底部圆点\n  const [hasClicked, setHasClicked] = useState(false); //函数节流，防止用户快速、频繁点击图片变换导致出错，flase为图片变换操作不可执行\n\n  const picturesUl = useRef();\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const lazyImage = entry.target;\n        lazyImage.src = lazyImage.dataset.src;\n        observer.unobserve(lazyImage);\n      }\n    });\n  });\n  const lastPicutre = () => {};\n  const nextPictures = () => {};\n  const gotoDirectly = index => {};\n\n  // useEffect(()=>{\n  //     if (!newval) {     \n  //         this.$mytimer = setInterval(() => {\n  //             if (this.pictureShowing < this.pictures.length-1) {\n  //                 this.pictureShowing++;\n  //             } else {\n  //                 this.pictureShowing = 0;\n  //             }\n  //             this.changeDefault(10);\n  //         }, 3000);\n  //     } else {\n  //         clearInterval(this.$mytimer);\n  //     }\n  // }, [mouseEnter])\n\n  // useEffect(()=>{\n  //     for (let i = 0; i < this.pictures.length; i++) {\n  //         (this.$refs.cicle)[i].style.background = \"\";\n  //     }\n  //     (this.$refs.cicle)[newval].style.background = \"black\";\n  // },[pictureShowing])\n\n  useEffect(() => {\n    const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0]);\n    if ('IntersectionObserver' in window) {\n      lazyImages.forEach(image => {\n        observer.observe(image);\n      });\n    } else {\n      lazyImages.forEach(image => {\n        image.src = image.dataset.src;\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outest\",\n    onMouseOver: () => {\n      setMouseEnter(true);\n    },\n    onMouseLeave: () => {\n      setMouseEnter(false);\n    },\n    children: [mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _left\",\n      src: \"../img/\\u5411\\u5DE6.png\",\n      alt: \"\\u5411\\u5DE6\",\n      onClick: lastPicutre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 30\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: picturesUl,\n      children: picturesArr.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-src\": e.src,\n            alt: e.alt,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, e.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), mouseEnter ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mydiv\",\n      children: picturesArr.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-cicle\",\n          onClick: gotoDirectly(e.index)\n        }, e.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 41\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }, this) : '', mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _right\",\n      src: \"../img/\\u5411\\u53F3.png\",\n      alt: \"\\u5411\\u53F3\",\n      onClick: nextPictures\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 30\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}, \"4tmNjGHa9A5tnPJ/iFJ2RXIfAbg=\")), \"4tmNjGHa9A5tnPJ/iFJ2RXIfAbg=\");\n_c2 = SlidePictures;\nexport default SlidePictures;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlidePictures$memo\");\n$RefreshReg$(_c2, \"SlidePictures\");","map":{"version":3,"names":["React","useEffect","useState","memo","useRef","jsxDEV","_jsxDEV","SlidePictures","_s","_c","props","picturesArr","mouseEnter","setMouseEnter","pictureShowing","setPictureShowing","hasClicked","setHasClicked","picturesUl","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","lastPicutre","nextPictures","gotoDirectly","index","lazyImages","Array","from","current","childNodes","map","e","window","image","observe","className","onMouseOver","onMouseLeave","children","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","loading","_c2","$RefreshReg$"],"sources":["D:/leading_end/daily_study/008-轮播图__React/react_project/src/components/SlidePictures/SlidePictures.jsx"],"sourcesContent":["import React, {useEffect, useState, memo, useRef} from 'react'\r\nimport './SlidePictures.scss'\r\n\r\nconst SlidePictures = memo((props) => {\r\n    const picturesArr = props.picturesArr;\r\n    const [mouseEnter, setMouseEnter] = useState(false);       //鼠标是否悬浮在整个区域上\r\n    const [pictureShowing, setPictureShowing] = useState(0);   //当前展示的是第几张图片，用来更新底部圆点\r\n    const [hasClicked, setHasClicked] = useState(false);       //函数节流，防止用户快速、频繁点击图片变换导致出错，flase为图片变换操作不可执行\r\n\r\n    const picturesUl = useRef();\r\n\r\n    const observer = new IntersectionObserver((entries, observer) => {  \r\n        entries.forEach(entry => {  \r\n            if(entry.isIntersecting) {  \r\n                const lazyImage = entry.target;  \r\n                lazyImage.src = lazyImage.dataset.src;\r\n                observer.unobserve(lazyImage);  \r\n            }  \r\n        });  \r\n    });\r\n\r\n    const lastPicutre = () => {\r\n\r\n    }\r\n    const nextPictures = () => {\r\n\r\n    }\r\n    const gotoDirectly = (index) => {\r\n\r\n    }\r\n\r\n    // useEffect(()=>{\r\n    //     if (!newval) {     \r\n    //         this.$mytimer = setInterval(() => {\r\n    //             if (this.pictureShowing < this.pictures.length-1) {\r\n    //                 this.pictureShowing++;\r\n    //             } else {\r\n    //                 this.pictureShowing = 0;\r\n    //             }\r\n    //             this.changeDefault(10);\r\n    //         }, 3000);\r\n    //     } else {\r\n    //         clearInterval(this.$mytimer);\r\n    //     }\r\n    // }, [mouseEnter])\r\n\r\n    // useEffect(()=>{\r\n    //     for (let i = 0; i < this.pictures.length; i++) {\r\n    //         (this.$refs.cicle)[i].style.background = \"\";\r\n    //     }\r\n    //     (this.$refs.cicle)[newval].style.background = \"black\";\r\n    // },[pictureShowing])\r\n\r\n    useEffect(()=>{\r\n        const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0])\r\n        if('IntersectionObserver' in window){  \r\n            lazyImages.forEach(image => { observer.observe(image); });  \r\n        }else{\r\n            lazyImages.forEach(image => { image.src = image.dataset.src; });  \r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"outest\" onMouseOver={() => {setMouseEnter(true)}} onMouseLeave={() => {setMouseEnter(false)}} >\r\n            {/* 向左icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _left\" src=\"../img/向左.png\" \r\n                    alt=\"向左\" onClick={lastPicutre}/> : ''\r\n            }\r\n            {/* 主要图片 */}\r\n            <ul ref={picturesUl}>\r\n            {\r\n                picturesArr.map(e => {\r\n                    return (<li key={e.index}>\r\n                        <img data-src={e.src} alt={e.alt} loading='lazy'/>\r\n                    </li>)\r\n                })\r\n            }\r\n            </ul>\r\n            {/* 底部小圆圈的设置 */}\r\n            {\r\n                mouseEnter ? (\r\n                    <div className=\"mydiv\">\r\n                        {\r\n                            picturesArr.map(e =>{\r\n                                return (<div className=\"empty-cicle\" key={e.index}\r\n                                    onClick={gotoDirectly(e.index)}>\r\n                                </div>)\r\n                            })\r\n                        }\r\n                    </div>\r\n                ) : ''\r\n            }\r\n            {/* 向右icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _right\" src=\"../img/向右.png\" alt=\"向右\" \r\n                    onClick={nextPictures}/> : ''\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SlidePictures;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}