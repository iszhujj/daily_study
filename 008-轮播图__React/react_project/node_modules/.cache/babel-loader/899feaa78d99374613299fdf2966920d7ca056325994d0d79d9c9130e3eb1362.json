{"ast":null,"code":"var _jsxFileName = \"D:\\\\leading_end\\\\daily_study\\\\008-\\u8F6E\\u64AD\\u56FE__React\\\\react_project\\\\src\\\\components\\\\SlidePictures\\\\SlidePictures.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, memo, useRef } from 'react';\nimport './SlidePictures.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlidePictures = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  // 复制第一张图片在最后\n  const picturesArr = [...props.picturesArr, props.picturesArr[0]];\n  const [mouseEnter, setMouseEnter] = useState(false); //鼠标是否悬浮在整个区域上\n  const [pictureShowing, setPictureShowing] = useState(0); //当前展示的是第几张图片\n  const [hasClicked, setHasClicked] = useState(false); //函数节流，防止用户快速、频繁点击图片变换导致出错，flase为图片变换操作不可执行\n\n  const picturesUl = useRef(); // 图片外部的ul\n  const circlesContainer = useRef(); // 底部的小圆圈\n\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const lazyImage = entry.target;\n        lazyImage.src = lazyImage.dataset.src;\n        observer.unobserve(lazyImage);\n      }\n    });\n  });\n\n  // 控制图片默认切换的方法(当前所展示的图片索引，用于控制是否变换的值)\n  const changeAction = (currentPictureIndex, controlIndex, currentIndex) => {\n    // console.log(currentPictureIndex, controlIndex, currentIndex)\n    if (currentIndex < controlIndex) {\n      requestAnimationFrame(() => {\n        changeAction(currentPictureIndex, controlIndex, currentIndex + 1);\n      });\n    } else {\n      // 如果有 5 张有效的图片，那么length = 6\n      const length = picturesArr.length;\n      const nextIndex = (currentPictureIndex + 1) % length;\n      // pictureShowing 的范围为 0 ~ 5\n      setPictureShowing(nextIndex);\n      if (nextIndex >= 5) {\n        requestAnimationFrame(() => {\n          fromEndPicToFirst(nextIndex, controlIndex, 1);\n        });\n      } else {\n        requestAnimationFrame(() => {\n          changeAction(nextIndex, controlIndex, 1);\n        });\n      }\n    }\n  };\n\n  // 从最后一张图片切换到第一张图片的一个小动作\n  const fromEndPicToFirst = (currentPictureIndex, controlIndex, currentIndex) => {\n    if (currentIndex === controlIndex - 40) {\n      // 移除 transition 类\n      picturesUl.current.classList.remove('ul-transition');\n      // ul 的 translateX 会变为 0 \n      setPictureShowing(0);\n      requestAnimationFrame(() => {\n        fromEndPicToFirst(currentPictureIndex, controlIndex, currentIndex + 1);\n      });\n    } else if (currentIndex >= controlIndex - 30) {\n      picturesUl.current.classList.add('ul-transition');\n      requestAnimationFrame(() => {\n        changeAction(0, controlIndex, currentIndex + 1);\n      });\n    } else {\n      requestAnimationFrame(() => {\n        fromEndPicToFirst(currentPictureIndex, controlIndex, currentIndex + 1);\n      });\n    }\n  };\n  const lastPicutre = () => {};\n  const nextPictures = () => {};\n  const gotoDirectly = index => {};\n\n  // useEffect(()=>{\n  //     if (!newval) {     \n  //         this.$mytimer = setInterval(() => {\n  //             if (this.pictureShowing < this.pictures.length-1) {\n  //                 this.pictureShowing++;\n  //             } else {\n  //                 this.pictureShowing = 0;\n  //             }\n  //             this.changeDefault(10);\n  //         }, 3000);\n  //     } else {\n  //         clearInterval(this.$mytimer);\n  //     }\n  // }, [mouseEnter])\n\n  useEffect(() => {\n    // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\n    const realIndex = pictureShowing >= 5 ? 0 : pictureShowing;\n    // 改变底部小圆圈的样式\n    let circlesArr = Array.from(circlesContainer.current.childNodes);\n    circlesArr.forEach(circle => {\n      circle.style.background = \"\";\n    });\n    circlesArr[realIndex].style.background = \"black\";\n  }, [pictureShowing]);\n  useEffect(() => {\n    // 配置图片懒加载\n    const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0]);\n    if ('IntersectionObserver' in window) {\n      lazyImages.forEach(image => {\n        observer.observe(image);\n      });\n    } else {\n      lazyImages.forEach(image => {\n        image.src = image.dataset.src;\n      });\n    }\n    // 启动轮播图\n    requestAnimationFrame(() => {\n      changeAction(0, 260, 1);\n    });\n  }, []); // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outest\",\n    onMouseOver: () => {\n      setMouseEnter(true);\n    },\n    onMouseLeave: () => {\n      setMouseEnter(false);\n    },\n    children: [mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _left\",\n      src: \"left.png\",\n      alt: \"last\",\n      onClick: lastPicutre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 30\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: picturesUl,\n      className: \"ul-transition\",\n      style: {\n        transform: `translate(calc(${pictureShowing} * -600px), 0)`\n      },\n      children: picturesArr.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-src\": e.src,\n            alt: e.alt,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mydiv\",\n      ref: circlesContainer,\n      children: props.picturesArr.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-cicle\",\n          onClick: gotoDirectly(e.index)\n        }, e.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _right\",\n      src: \"right.png\",\n      alt: \"next\",\n      onClick: nextPictures\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 30\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}, \"vwD/licM2jvUvzcJ3ZNN896dFWE=\")), \"vwD/licM2jvUvzcJ3ZNN896dFWE=\");\n_c2 = SlidePictures;\nexport default SlidePictures;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlidePictures$memo\");\n$RefreshReg$(_c2, \"SlidePictures\");","map":{"version":3,"names":["React","useEffect","useState","memo","useRef","jsxDEV","_jsxDEV","SlidePictures","_s","_c","props","picturesArr","mouseEnter","setMouseEnter","pictureShowing","setPictureShowing","hasClicked","setHasClicked","picturesUl","circlesContainer","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","changeAction","currentPictureIndex","controlIndex","currentIndex","requestAnimationFrame","length","nextIndex","fromEndPicToFirst","current","classList","remove","add","lastPicutre","nextPictures","gotoDirectly","index","realIndex","circlesArr","Array","from","childNodes","circle","style","background","lazyImages","map","e","window","image","observe","className","onMouseOver","onMouseLeave","children","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","transform","i","loading","_c2","$RefreshReg$"],"sources":["D:/leading_end/daily_study/008-轮播图__React/react_project/src/components/SlidePictures/SlidePictures.jsx"],"sourcesContent":["import React, {useEffect, useState, memo, useRef} from 'react'\r\nimport './SlidePictures.scss'\r\n\r\nconst SlidePictures = memo((props) => {\r\n    // 复制第一张图片在最后\r\n    const picturesArr = [...props.picturesArr, props.picturesArr[0]];\r\n    const [mouseEnter, setMouseEnter] = useState(false);       //鼠标是否悬浮在整个区域上\r\n    const [pictureShowing, setPictureShowing] = useState(0);   //当前展示的是第几张图片\r\n    const [hasClicked, setHasClicked] = useState(false);       //函数节流，防止用户快速、频繁点击图片变换导致出错，flase为图片变换操作不可执行\r\n\r\n    const picturesUl = useRef();                    // 图片外部的ul\r\n    const circlesContainer = useRef();              // 底部的小圆圈\r\n    \r\n\r\n    const observer = new IntersectionObserver((entries, observer) => {  \r\n        entries.forEach(entry => {  \r\n            if(entry.isIntersecting) {  \r\n                const lazyImage = entry.target;  \r\n                lazyImage.src = lazyImage.dataset.src;\r\n                observer.unobserve(lazyImage);  \r\n            }  \r\n        });  \r\n    });\r\n\r\n    // 控制图片默认切换的方法(当前所展示的图片索引，用于控制是否变换的值)\r\n    const changeAction = (currentPictureIndex, controlIndex, currentIndex) =>{\r\n        // console.log(currentPictureIndex, controlIndex, currentIndex)\r\n        if(currentIndex < controlIndex){\r\n            requestAnimationFrame(() => {changeAction(currentPictureIndex, controlIndex, currentIndex + 1)})\r\n        }else{\r\n            // 如果有 5 张有效的图片，那么length = 6\r\n            const length = picturesArr.length;\r\n            const nextIndex = (currentPictureIndex + 1) % length;\r\n            // pictureShowing 的范围为 0 ~ 5\r\n            setPictureShowing(nextIndex);\r\n            if(nextIndex >= 5){\r\n                requestAnimationFrame(() => {fromEndPicToFirst(nextIndex, controlIndex, 1)})\r\n            }else{\r\n                requestAnimationFrame(() => {changeAction(nextIndex, controlIndex, 1)})\r\n            }\r\n        }\r\n    }\r\n\r\n    // 从最后一张图片切换到第一张图片的一个小动作\r\n    const fromEndPicToFirst = (currentPictureIndex, controlIndex, currentIndex) =>{\r\n        if(currentIndex === (controlIndex - 40)){\r\n            // 移除 transition 类\r\n            picturesUl.current.classList.remove('ul-transition');\r\n            // ul 的 translateX 会变为 0 \r\n            setPictureShowing(0);\r\n            requestAnimationFrame(() => {fromEndPicToFirst(currentPictureIndex, controlIndex, currentIndex + 1)})\r\n        }else if(currentIndex >= controlIndex - 30){\r\n            picturesUl.current.classList.add('ul-transition');\r\n            requestAnimationFrame(() => {changeAction(0, controlIndex, currentIndex + 1)})\r\n        }else{\r\n            requestAnimationFrame(() => {fromEndPicToFirst(currentPictureIndex, controlIndex, currentIndex + 1)})\r\n        }\r\n    }\r\n\r\n    const lastPicutre = () => {\r\n\r\n    }\r\n    const nextPictures = () => {\r\n\r\n    }\r\n    const gotoDirectly = (index) => {\r\n\r\n    }\r\n\r\n    // useEffect(()=>{\r\n    //     if (!newval) {     \r\n    //         this.$mytimer = setInterval(() => {\r\n    //             if (this.pictureShowing < this.pictures.length-1) {\r\n    //                 this.pictureShowing++;\r\n    //             } else {\r\n    //                 this.pictureShowing = 0;\r\n    //             }\r\n    //             this.changeDefault(10);\r\n    //         }, 3000);\r\n    //     } else {\r\n    //         clearInterval(this.$mytimer);\r\n    //     }\r\n    // }, [mouseEnter])\r\n\r\n    useEffect(()=>{\r\n        // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\r\n        const realIndex = pictureShowing >= 5 ? 0 : pictureShowing\r\n        // 改变底部小圆圈的样式\r\n        let circlesArr = Array.from(circlesContainer.current.childNodes);\r\n        circlesArr.forEach(circle => { circle.style.background = \"\"; })\r\n        circlesArr[realIndex].style.background = \"black\";\r\n    },[pictureShowing])\r\n\r\n    useEffect(()=>{\r\n        // 配置图片懒加载\r\n        const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0])\r\n        if('IntersectionObserver' in window){  \r\n            lazyImages.forEach(image => { observer.observe(image); });  \r\n        }else{\r\n            lazyImages.forEach(image => { image.src = image.dataset.src; });  \r\n        }\r\n        // 启动轮播图\r\n        requestAnimationFrame(() => {changeAction(0, 260, 1)})\r\n    },[])   // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\r\n\r\n    return (\r\n        <div className=\"outest\" onMouseOver={() => {setMouseEnter(true)}} onMouseLeave={() => {setMouseEnter(false)}} >\r\n            {/* 向左icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _left\" src=\"left.png\" \r\n                    alt=\"last\" onClick={lastPicutre}/> : ''\r\n            }\r\n\r\n            {/* 主要图片 */}\r\n            <ul ref={picturesUl} className='ul-transition' style={{\r\n                transform: `translate(calc(${pictureShowing} * -600px), 0)`\r\n            }}>\r\n            {\r\n                picturesArr.map((e, i) => {\r\n                    return (<li key={i}>\r\n                        <img data-src={e.src} alt={e.alt} loading='lazy'/>\r\n                    </li>)\r\n                })\r\n            }\r\n            </ul>\r\n\r\n            {/* 底部小圆圈的设置 */}\r\n            <div className=\"mydiv\" ref={circlesContainer}>\r\n                {\r\n                    props.picturesArr.map(e =>{\r\n                        return (<div\r\n                            className=\"empty-cicle\" key={e.index} onClick={gotoDirectly(e.index)}>\r\n                            </div>)\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {/* 向右icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _right\" src=\"right.png\" alt=\"next\" \r\n                    onClick={nextPictures}/> : ''\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SlidePictures;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}