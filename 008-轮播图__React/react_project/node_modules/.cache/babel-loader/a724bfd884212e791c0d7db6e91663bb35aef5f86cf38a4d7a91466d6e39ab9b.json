{"ast":null,"code":"var _jsxFileName = \"D:\\\\leading_end\\\\daily_study\\\\008-\\u8F6E\\u64AD\\u56FE__React\\\\react_project\\\\src\\\\components\\\\SlidePictures\\\\SlidePictures.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, memo, useRef } from 'react';\nimport './SlidePictures.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlidePictures = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  const CONTROL_INDEX = 260; // 控制图片的切换速度\n  // 复制第一张图片在最后\n  const picturesArr = [...props.picturesArr, props.picturesArr[0]];\n  const [mouseEnter, setMouseEnter] = useState(false); //鼠标是否悬浮在整个区域上\n  const [pictureShowing, setPictureShowing] = useState(0); //当前展示的是第几张图片\n  const [hasClicked, setHasClicked] = useState(false); //函数节流，防止用户快速、频繁点击图片变换导致出错，flase为图片变换操作不可执行\n\n  const picturesUl = useRef(); // 图片外部的ul\n  const circlesContainer = useRef(); // 底部的小圆圈\n  const customChanging = useRef(false); // 是否人为地引起了改变\n  const defaultChanging = useRef(false); // 默认切换图片\n\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const lazyImage = entry.target;\n        lazyImage.src = lazyImage.dataset.src;\n        observer.unobserve(lazyImage);\n      }\n    });\n  });\n\n  // 控制图片默认切换的方法(当前所展示的图片索引，用于控制是否变换的值)\n  const changeAction = (controlIndex, currentIndex) => {\n    if (customChanging.current) return;\n    console.log('ok', pictureShowing, controlIndex, currentIndex);\n    if (currentIndex < controlIndex) {\n      requestAnimationFrame(() => {\n        changeAction(controlIndex, currentIndex + 1);\n      });\n    } else {\n      defaultChanging.current = true;\n      // 如果有 5 张有效的图片，那么length = 6\n      const length = picturesArr.length;\n      const targetIndex = (pictureShowing + 1) % length;\n      // pictureShowing 的范围为 0 ~ 5\n      if (pictureShowing === 5) {\n        picturesUl.current.classList.remove('ul-transition');\n        picturesUl.current.style.transform = 'translate(0px, 0px)';\n        setPictureShowing(0);\n        requestAnimationFrame(() => {\n          picturesUl.current.classList.add('ul-transition');\n          setPictureShowing(1);\n          changeAction(controlIndex, 1);\n        });\n      } else {\n        console.log('set ps');\n        setPictureShowing(targetIndex);\n        requestAnimationFrame(() => {\n          changeAction(controlIndex, 1);\n        });\n      }\n    }\n  };\n\n  // 上一张\n  const lastPicutre = () => {\n    if (customChanging.current || defaultChanging.current) return;else {\n      customChanging.current = true;\n      const length = picturesArr.length;\n      const targetIndex = (pictureShowing - 1) % length;\n      console.log('last', targetIndex);\n      if (targetIndex === 0) {\n        picturesUl.current.classList.remove('ul-transition');\n        picturesUl.current.style.transform = 'translate(0px, 0px)';\n        setPictureShowing(5);\n        requestAnimationFrame(() => {\n          picturesUl.current.classList.add('ul-transition');\n          setPictureShowing(4);\n        });\n      } else {\n        setPictureShowing(targetIndex);\n      }\n    }\n  };\n  // 下一张\n  const nextPictures = () => {\n    if (customChanging.current || defaultChanging.current) return;else {\n      customChanging.current = true;\n      const length = picturesArr.length;\n      const targetIndex = (pictureShowing + 1) % length;\n      console.log('next', targetIndex);\n      if (pictureShowing === 5) {\n        picturesUl.current.classList.remove('ul-transition');\n        picturesUl.current.style.transform = 'translate(0px, 0px)';\n        setPictureShowing(0);\n        requestAnimationFrame(() => {\n          picturesUl.current.classList.add('ul-transition');\n          setPictureShowing(1);\n        });\n      } else {\n        setPictureShowing(targetIndex);\n      }\n    }\n  };\n  const gotoDirectly = index => {};\n  useEffect(() => {\n    // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\n    const realIndex = pictureShowing >= 5 ? 0 : pictureShowing;\n    // 改变底部小圆圈的样式\n    let circlesArr = Array.from(circlesContainer.current.childNodes);\n    circlesArr.forEach(circle => {\n      circle.style.background = \"\";\n    });\n    circlesArr[realIndex].style.background = \"black\";\n    if (customChanging.current) customChanging.current = false;\n    if (defaultChanging.current) defaultChanging.current = false;\n  }, [pictureShowing]);\n  useEffect(() => {\n    console.log('init');\n    // 配置图片懒加载\n    const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0]);\n    if ('IntersectionObserver' in window) {\n      lazyImages.forEach(image => {\n        observer.observe(image);\n      });\n    } else {\n      lazyImages.forEach(image => {\n        image.src = image.dataset.src;\n      });\n    }\n    // 启动轮播图\n    requestAnimationFrame(() => {\n      changeAction(CONTROL_INDEX, 1);\n    });\n  }, []); // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outest\",\n    onMouseOver: () => {\n      setMouseEnter(true);\n    },\n    onMouseLeave: () => {\n      setMouseEnter(false);\n    },\n    children: [mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _left\",\n      src: \"left.png\",\n      alt: \"last\",\n      onClick: lastPicutre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 30\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n      ref: picturesUl,\n      className: \"ul-transition\",\n      style: {\n        transform: `translate(calc(${pictureShowing} * -600px), 0)`\n      },\n      children: picturesArr.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            \"data-src\": e.src,\n            alt: e.alt,\n            loading: \"lazy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mydiv\",\n      ref: circlesContainer,\n      children: props.picturesArr.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-cicle\",\n          onClick: gotoDirectly(e.index)\n        }, e.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"icon _right\",\n      src: \"right.png\",\n      alt: \"next\",\n      onClick: nextPictures\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 30\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}, \"J2U6Dvf3S2mTLdhlzbkMpp2KfuA=\")), \"J2U6Dvf3S2mTLdhlzbkMpp2KfuA=\");\n_c2 = SlidePictures;\nexport default SlidePictures;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlidePictures$memo\");\n$RefreshReg$(_c2, \"SlidePictures\");","map":{"version":3,"names":["React","useEffect","useState","memo","useRef","jsxDEV","_jsxDEV","SlidePictures","_s","_c","props","CONTROL_INDEX","picturesArr","mouseEnter","setMouseEnter","pictureShowing","setPictureShowing","hasClicked","setHasClicked","picturesUl","circlesContainer","customChanging","defaultChanging","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","changeAction","controlIndex","currentIndex","current","console","log","requestAnimationFrame","length","targetIndex","classList","remove","style","transform","add","lastPicutre","nextPictures","gotoDirectly","index","realIndex","circlesArr","Array","from","childNodes","circle","background","lazyImages","map","e","window","image","observe","className","onMouseOver","onMouseLeave","children","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","i","loading","_c2","$RefreshReg$"],"sources":["D:/leading_end/daily_study/008-轮播图__React/react_project/src/components/SlidePictures/SlidePictures.jsx"],"sourcesContent":["import React, {useEffect, useState, memo, useRef} from 'react'\r\nimport './SlidePictures.scss'\r\n\r\nconst SlidePictures = memo((props) => {\r\n    const CONTROL_INDEX = 260;          // 控制图片的切换速度\r\n    // 复制第一张图片在最后\r\n    const picturesArr = [...props.picturesArr, props.picturesArr[0]];\r\n    const [mouseEnter, setMouseEnter] = useState(false);       //鼠标是否悬浮在整个区域上\r\n    const [pictureShowing, setPictureShowing] = useState(0);   //当前展示的是第几张图片\r\n    const [hasClicked, setHasClicked] = useState(false);       //函数节流，防止用户快速、频繁点击图片变换导致出错，flase为图片变换操作不可执行\r\n\r\n    const picturesUl = useRef();                    // 图片外部的ul\r\n    const circlesContainer = useRef();              // 底部的小圆圈\r\n    const customChanging = useRef(false);           // 是否人为地引起了改变\r\n    const defaultChanging = useRef(false);          // 默认切换图片\r\n\r\n    const observer = new IntersectionObserver((entries, observer) => {  \r\n        entries.forEach(entry => {  \r\n            if(entry.isIntersecting) {  \r\n                const lazyImage = entry.target;  \r\n                lazyImage.src = lazyImage.dataset.src;\r\n                observer.unobserve(lazyImage);  \r\n            }  \r\n        });  \r\n    });\r\n\r\n    // 控制图片默认切换的方法(当前所展示的图片索引，用于控制是否变换的值)\r\n    const changeAction = (controlIndex, currentIndex) =>{\r\n        if(customChanging.current) return;\r\n        console.log('ok', pictureShowing, controlIndex, currentIndex)\r\n        if(currentIndex < controlIndex){\r\n            requestAnimationFrame(() => {changeAction(controlIndex, currentIndex + 1)})\r\n        }else{\r\n            defaultChanging.current = true;\r\n            // 如果有 5 张有效的图片，那么length = 6\r\n            const length = picturesArr.length;\r\n            const targetIndex = (pictureShowing + 1) % length;\r\n            // pictureShowing 的范围为 0 ~ 5\r\n            if(pictureShowing === 5){\r\n                picturesUl.current.classList.remove('ul-transition');\r\n                picturesUl.current.style.transform = 'translate(0px, 0px)';\r\n                setPictureShowing(0);\r\n                requestAnimationFrame(() => {\r\n                    picturesUl.current.classList.add('ul-transition');\r\n                    setPictureShowing(1);\r\n                    changeAction(controlIndex, 1)\r\n                })\r\n            }else{\r\n                console.log('set ps', )\r\n                setPictureShowing(targetIndex);\r\n                requestAnimationFrame(() => {changeAction(controlIndex, 1)})\r\n            }\r\n        }\r\n    }\r\n\r\n    // 上一张\r\n    const lastPicutre = () => {\r\n        if(customChanging.current || defaultChanging.current) return;\r\n        else{\r\n            customChanging.current = true;\r\n            const length = picturesArr.length;\r\n            const targetIndex = (pictureShowing - 1) % length;\r\n            console.log('last', targetIndex)\r\n            if(targetIndex === 0){\r\n                picturesUl.current.classList.remove('ul-transition');\r\n                picturesUl.current.style.transform = 'translate(0px, 0px)';\r\n                setPictureShowing(5);\r\n                requestAnimationFrame(() => {\r\n                    picturesUl.current.classList.add('ul-transition');\r\n                    setPictureShowing(4)\r\n                })\r\n            }else{\r\n                setPictureShowing(targetIndex);\r\n            }\r\n        }\r\n    }\r\n    // 下一张\r\n    const nextPictures = () => {\r\n        if(customChanging.current || defaultChanging.current) return;\r\n        else{\r\n            customChanging.current = true;\r\n            const length = picturesArr.length;\r\n            const targetIndex = (pictureShowing + 1) % length;\r\n            console.log('next', targetIndex)\r\n            if(pictureShowing === 5){\r\n                picturesUl.current.classList.remove('ul-transition');\r\n                picturesUl.current.style.transform = 'translate(0px, 0px)';\r\n                setPictureShowing(0);\r\n                requestAnimationFrame(() => {\r\n                    picturesUl.current.classList.add('ul-transition');\r\n                    setPictureShowing(1)\r\n                })\r\n            }else{\r\n                setPictureShowing(targetIndex);\r\n            }\r\n        }\r\n    }\r\n    const gotoDirectly = (index) => {\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\r\n        const realIndex = pictureShowing >= 5 ? 0 : pictureShowing\r\n        // 改变底部小圆圈的样式\r\n        let circlesArr = Array.from(circlesContainer.current.childNodes);\r\n        circlesArr.forEach(circle => { circle.style.background = \"\"; })\r\n        circlesArr[realIndex].style.background = \"black\";\r\n        if(customChanging.current) customChanging.current = false;\r\n        if(defaultChanging.current) defaultChanging.current = false;\r\n    },[pictureShowing])\r\n\r\n    useEffect(()=>{\r\n        console.log('init');\r\n        // 配置图片懒加载\r\n        const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0])\r\n        if('IntersectionObserver' in window){  \r\n            lazyImages.forEach(image => { observer.observe(image); });  \r\n        }else{\r\n            lazyImages.forEach(image => { image.src = image.dataset.src; });  \r\n        }\r\n        // 启动轮播图\r\n        requestAnimationFrame(() => {changeAction(CONTROL_INDEX, 1)})\r\n    },[])   // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\r\n\r\n    return (\r\n        <div className=\"outest\" onMouseOver={() => {setMouseEnter(true)}} onMouseLeave={() => {setMouseEnter(false)}} >\r\n            {/* 向左icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _left\" src=\"left.png\" \r\n                    alt=\"last\" onClick={lastPicutre}/> : ''\r\n            }\r\n\r\n            {/* 主要图片 */}\r\n            <ul ref={picturesUl} className='ul-transition' style={{\r\n                transform: `translate(calc(${pictureShowing} * -600px), 0)`\r\n            }}>\r\n            {\r\n                picturesArr.map((e, i) => {\r\n                    return (<li key={i}>\r\n                        <img data-src={e.src} alt={e.alt} loading='lazy'/>\r\n                    </li>)\r\n                })\r\n            }\r\n            </ul>\r\n\r\n            {/* 底部小圆圈的设置 */}\r\n            <div className=\"mydiv\" ref={circlesContainer}>\r\n                {\r\n                    props.picturesArr.map(e =>{\r\n                        return (<div\r\n                            className=\"empty-cicle\" key={e.index} onClick={gotoDirectly(e.index)}>\r\n                            </div>)\r\n                    })\r\n                }\r\n            </div>\r\n\r\n            {/* 向右icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _right\" src=\"right.png\" alt=\"next\" \r\n                    onClick={nextPictures}/> : ''\r\n            }\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default SlidePictures;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}