{"ast":null,"code":"var _jsxFileName = \"D:\\\\leading_end\\\\daily_study\\\\008-\\u8F6E\\u64AD\\u56FE__React\\\\react_project\\\\src\\\\components\\\\SlidePictures\\\\SlidePictures.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, memo, useRef } from 'react';\nimport './SlidePictures.scss';\n\n/**\r\n * props 的参数\r\n * picturesArr: Array   （must）\r\n *      对象数组{src:String, alt:String, index:Number 从零开始}\r\n * circleOrSquare: Number   (0:'square', 1:'circle')\r\n *      下方的控制点事圆圈还是矩形\r\n * useControlPoint: Boolean\r\n *      是否启用下方的控制点\r\n * useLeftAndRight: Boolean\r\n *      是否启用左右两侧的控制标签\r\n * width:Number\r\n *      每一张图片的宽度(宽高必须同时设置)\r\n * height:Number\r\n *      每一张图片的高度(宽高必须同时设置)\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SlidePictures = /*#__PURE__*/_s( /*#__PURE__*/memo(_c = _s(props => {\n  _s();\n  const CONTROL_INDEX = 260; // 控制图片的切换速度\n  // 复制第一张图片在最后\n  const picturesArr = [...props.picturesArr, props.picturesArr[0]];\n  const circleOrSquare = props.circleOrSquare || 0;\n  const useControlPoint = props.useControlPoint || true;\n  const useLeftAndRight = props.useLeftAndRight || true;\n  const WIDTH = props.width || 600;\n  const HEIGHT = props.height || 400;\n  const [mouseEnter, setMouseEnter] = useState(false); //鼠标是否悬浮在整个区域上\n  const [pictureShowing, setPictureShowing] = useState(0); //当前展示的是第几张图片\n\n  const picturesUl = useRef(); // 图片外部的ul\n  const circlesContainer = useRef(); // 底部的小圆圈\n  const customChanging = useRef(false); // 是否人为地引起了改变\n  const defaultChanging = useRef(false); // 默认切换图片\n\n  const observer = new IntersectionObserver((entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        const lazyImage = entry.target;\n        lazyImage.src = lazyImage.dataset.src;\n        observer.unobserve(lazyImage);\n      }\n    });\n  });\n\n  // 控制图片切换的方法\n  // (当前所展示的图片索引currentPictureIndex，用于控制是否变换的值controlIndex)\n  // 当currentIndex累加到与controlIndex相等时，会进行图片的切换\n  const changeAction = (currentPictureIndex, controlIndex, currentIndex) => {\n    console.log(currentPictureIndex, controlIndex, currentIndex);\n    if (customChanging.current || defaultChanging.current) return;\n    if (currentIndex < controlIndex) {\n      requestAnimationFrame(() => {\n        changeAction(currentPictureIndex, controlIndex, currentIndex + 1);\n      });\n    } else {\n      defaultChanging.current = true;\n      // 如果有 5 张有效的图片，那么length = 6\n      const length = picturesArr.length;\n      const targetIndex = (currentPictureIndex + 1) % length;\n      if (currentPictureIndex === length - 1) {\n        picturesUl.current.classList.remove('ul-transition');\n        setPictureShowing(0);\n        requestAnimationFrame(() => {\n          // 会多走一次requestAnimationFrame，是为了确保 setPictureShowing 完成前没有给 picturesUl 添加 .ul-transition\n          changeAction(0, controlIndex, controlIndex - 1);\n        });\n      } else {\n        if (!picturesUl.current.classList.contains('ul-transition')) {\n          picturesUl.current.classList.add('ul-transition');\n        }\n        setPictureShowing(targetIndex);\n        requestAnimationFrame(() => {\n          changeAction(targetIndex, controlIndex, 1);\n        });\n      }\n    }\n  };\n\n  // 上一张（被gotoDirectly调用）\n  const lastPicutre = customIndex => {\n    customChanging.current = true;\n    const length = picturesArr.length;\n    var targetIndex = customIndex % length;\n    if (targetIndex < 0) {\n      picturesUl.current.classList.remove('ul-transition');\n      let endIndex = length - 1;\n      setPictureShowing(endIndex);\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(endIndex - 2, CONTROL_INDEX, CONTROL_INDEX - 1);\n      });\n    } else {\n      setPictureShowing(targetIndex);\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(targetIndex, CONTROL_INDEX, 1);\n      });\n    }\n  };\n  // 下一张（被gotoDirectly调用）\n  const nextPictures = customIndex => {\n    customChanging.current = true;\n    const length = picturesArr.length;\n    const targetIndex = customIndex % length;\n    if (pictureShowing === length - 1 && customIndex === length) {\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(length - 1, CONTROL_INDEX, CONTROL_INDEX);\n      });\n    } else {\n      setPictureShowing(targetIndex);\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(targetIndex, CONTROL_INDEX, 1);\n      });\n    }\n  };\n  // 跳转到指定的图片位置，index取值[0 ~ length-2]\n  const gotoDirectly = index => {\n    if (customChanging.current || defaultChanging.current) return;\n    if (pictureShowing === picturesArr.length - 1 && index === 0) return;\n    console.log(index, pictureShowing, picturesArr.length - 1, pictureShowing % (picturesArr.length - 1));\n    if (pictureShowing === picturesArr.length - 1) {\n      console.log('aaa');\n      customChanging.current = true;\n      picturesUl.current.classList.remove('ul-transition');\n      setPictureShowing(0);\n      requestAnimationFrame(() => {\n        customChanging.current = false;\n        changeAction(index - 1, CONTROL_INDEX, CONTROL_INDEX - 1);\n      });\n    } else if (index < pictureShowing % (picturesArr.length - 1)) {\n      console.log('bbb');\n      lastPicutre(index);\n    } else if (index > pictureShowing % (picturesArr.length - 1)) {\n      console.log('ccc');\n      nextPictures(index);\n    }\n  };\n  useEffect(() => {\n    // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\n    const realIndex = pictureShowing >= 5 ? 0 : pictureShowing;\n    // 改变底部小圆圈的样式\n    let pointsArr = Array.from(circlesContainer.current.childNodes);\n    pointsArr.forEach(point => {\n      point.style.backgroundColor = \"\";\n      point.style.opacity = 0.5;\n      point.style.borderColor = '#999';\n    });\n    pointsArr[realIndex].style.backgroundColor = \"#000\";\n    pointsArr[realIndex].style.opacity = 0.6;\n    pointsArr[realIndex].style.borderColor = '#000';\n    if (defaultChanging.current) defaultChanging.current = false;\n  }, [pictureShowing]);\n  useEffect(() => {\n    // 配置图片懒加载\n    const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0]);\n    if ('IntersectionObserver' in window) {\n      lazyImages.forEach(image => {\n        observer.observe(image);\n      });\n    } else {\n      lazyImages.forEach(image => {\n        image.src = image.dataset.src;\n      });\n    }\n    // 启动轮播图\n    requestAnimationFrame(() => {\n      changeAction(0, CONTROL_INDEX, 1);\n    });\n  }, []); // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\n\n  if (useLeftAndRight) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outest\",\n      style: WIDTH && HEIGHT ? {\n        width: `${WIDTH}px`,\n        height: `${HEIGHT}px`\n      } : {},\n      onMouseOver: () => {\n        setMouseEnter(true);\n      },\n      onMouseLeave: () => {\n        setMouseEnter(false);\n      },\n      children: [mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon _left\",\n        src: \"left.png\",\n        alt: \"last\",\n        onClick: () => {\n          gotoDirectly(pictureShowing - 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 30\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: picturesUl,\n        className: \"ul-transition\",\n        style: {\n          transform: `translate(calc(${pictureShowing} * -${WIDTH}px), 0)`\n        },\n        children: picturesArr.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              \"data-src\": e.src,\n              alt: e.alt,\n              loading: \"lazy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 25\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this), useControlPoint ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mydiv\",\n        ref: circlesContainer,\n        children: props.picturesArr.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: circleOrSquare ? 'circle def' : 'square def',\n            onClick: () => {\n              gotoDirectly(i);\n            }\n          }, e.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), mouseEnter ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"icon _right\",\n        src: \"right.png\",\n        alt: \"next\",\n        onClick: () => {\n          gotoDirectly(pictureShowing + 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 30\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outest\",\n      style: WIDTH && HEIGHT ? {\n        width: `${WIDTH}px`,\n        height: `${HEIGHT}px`\n      } : {},\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        ref: picturesUl,\n        className: \"ul-transition\",\n        style: {\n          transform: `translate(calc(${pictureShowing} * -600px), 0)`\n        },\n        children: picturesArr.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              \"data-src\": e.src,\n              alt: e.alt,\n              loading: \"lazy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 25\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), useControlPoint ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mydiv\",\n        ref: circlesContainer,\n        children: props.picturesArr.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: circleOrSquare ? 'circle def' : 'square def',\n            onClick: () => {\n              gotoDirectly(i);\n            }\n          }, e.index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 34\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this);\n  }\n}, \"bMmT4UNlaX+f9GLWYhriVy+aed8=\")), \"bMmT4UNlaX+f9GLWYhriVy+aed8=\");\n_c2 = SlidePictures;\nexport default SlidePictures;\nvar _c, _c2;\n$RefreshReg$(_c, \"SlidePictures$memo\");\n$RefreshReg$(_c2, \"SlidePictures\");","map":{"version":3,"names":["React","useEffect","useState","memo","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","SlidePictures","_s","_c","props","CONTROL_INDEX","picturesArr","circleOrSquare","useControlPoint","useLeftAndRight","WIDTH","width","HEIGHT","height","mouseEnter","setMouseEnter","pictureShowing","setPictureShowing","picturesUl","circlesContainer","customChanging","defaultChanging","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","lazyImage","target","src","dataset","unobserve","changeAction","currentPictureIndex","controlIndex","currentIndex","console","log","current","requestAnimationFrame","length","targetIndex","classList","remove","contains","add","lastPicutre","customIndex","endIndex","nextPictures","gotoDirectly","index","realIndex","pointsArr","Array","from","childNodes","point","style","backgroundColor","opacity","borderColor","lazyImages","map","e","window","image","observe","className","onMouseOver","onMouseLeave","children","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","transform","i","loading","_c2","$RefreshReg$"],"sources":["D:/leading_end/daily_study/008-轮播图__React/react_project/src/components/SlidePictures/SlidePictures.jsx"],"sourcesContent":["import React, {useEffect, useState, memo, useRef} from 'react'\r\nimport './SlidePictures.scss'\r\n\r\n/**\r\n * props 的参数\r\n * picturesArr: Array   （must）\r\n *      对象数组{src:String, alt:String, index:Number 从零开始}\r\n * circleOrSquare: Number   (0:'square', 1:'circle')\r\n *      下方的控制点事圆圈还是矩形\r\n * useControlPoint: Boolean\r\n *      是否启用下方的控制点\r\n * useLeftAndRight: Boolean\r\n *      是否启用左右两侧的控制标签\r\n * width:Number\r\n *      每一张图片的宽度(宽高必须同时设置)\r\n * height:Number\r\n *      每一张图片的高度(宽高必须同时设置)\r\n */\r\nconst SlidePictures = memo((props) => {\r\n    const CONTROL_INDEX = 260;          // 控制图片的切换速度\r\n    // 复制第一张图片在最后\r\n    const picturesArr = [...props.picturesArr, props.picturesArr[0]];\r\n    const circleOrSquare = props.circleOrSquare || 0;\r\n    const useControlPoint = props.useControlPoint || true;\r\n    const useLeftAndRight = props.useLeftAndRight || true;\r\n    const WIDTH = props.width || 600;\r\n    const HEIGHT = props.height || 400;\r\n\r\n    const [mouseEnter, setMouseEnter] = useState(false);       //鼠标是否悬浮在整个区域上\r\n    const [pictureShowing, setPictureShowing] = useState(0);   //当前展示的是第几张图片\r\n\r\n    const picturesUl = useRef();                    // 图片外部的ul\r\n    const circlesContainer = useRef();              // 底部的小圆圈\r\n    const customChanging = useRef(false);           // 是否人为地引起了改变\r\n    const defaultChanging = useRef(false);          // 默认切换图片\r\n\r\n    const observer = new IntersectionObserver((entries, observer) => {  \r\n        entries.forEach(entry => {  \r\n            if(entry.isIntersecting) {  \r\n                const lazyImage = entry.target;  \r\n                lazyImage.src = lazyImage.dataset.src;\r\n                observer.unobserve(lazyImage);  \r\n            }  \r\n        });  \r\n    });\r\n\r\n    // 控制图片切换的方法\r\n    // (当前所展示的图片索引currentPictureIndex，用于控制是否变换的值controlIndex)\r\n    // 当currentIndex累加到与controlIndex相等时，会进行图片的切换\r\n    const changeAction = (currentPictureIndex, controlIndex, currentIndex) =>{\r\n        console.log(currentPictureIndex, controlIndex, currentIndex)\r\n        if(customChanging.current || defaultChanging.current) return;\r\n        if(currentIndex < controlIndex){\r\n            requestAnimationFrame(() => {changeAction(currentPictureIndex, controlIndex, currentIndex + 1)})\r\n        }else{\r\n            defaultChanging.current = true;\r\n            // 如果有 5 张有效的图片，那么length = 6\r\n            const length = picturesArr.length;\r\n            const targetIndex = (currentPictureIndex + 1) % length;\r\n            if(currentPictureIndex === length - 1){\r\n                picturesUl.current.classList.remove('ul-transition');\r\n                setPictureShowing(0);\r\n                requestAnimationFrame(() => {\r\n                    // 会多走一次requestAnimationFrame，是为了确保 setPictureShowing 完成前没有给 picturesUl 添加 .ul-transition\r\n                    changeAction(0, controlIndex, controlIndex - 1)\r\n                })\r\n            }else{\r\n                if(!picturesUl.current.classList.contains('ul-transition')){\r\n                    picturesUl.current.classList.add('ul-transition');\r\n                }\r\n                setPictureShowing(targetIndex);\r\n                requestAnimationFrame(() => {changeAction(targetIndex, controlIndex, 1)})\r\n            }\r\n        }\r\n    }\r\n\r\n    // 上一张（被gotoDirectly调用）\r\n    const lastPicutre = (customIndex) => {\r\n        customChanging.current = true;\r\n        const length = picturesArr.length;\r\n        var targetIndex = customIndex % length;\r\n        if(targetIndex < 0){\r\n            picturesUl.current.classList.remove('ul-transition');\r\n            let endIndex = length - 1;\r\n            setPictureShowing(endIndex)\r\n            requestAnimationFrame(() => {\r\n                customChanging.current = false;\r\n                changeAction(endIndex - 2, CONTROL_INDEX, CONTROL_INDEX - 1)\r\n            })\r\n        }else{\r\n            setPictureShowing(targetIndex);\r\n            requestAnimationFrame(()=>{\r\n                customChanging.current = false;\r\n                changeAction(targetIndex, CONTROL_INDEX, 1)\r\n            })\r\n        }\r\n    }\r\n    // 下一张（被gotoDirectly调用）\r\n    const nextPictures = (customIndex) => {\r\n        customChanging.current = true;\r\n        const length = picturesArr.length;\r\n        const targetIndex = customIndex % length;\r\n        if(pictureShowing === length - 1 && customIndex === length){\r\n            requestAnimationFrame(()=>{\r\n                customChanging.current = false;\r\n                changeAction(length - 1, CONTROL_INDEX, CONTROL_INDEX)\r\n            })\r\n        }else{\r\n            setPictureShowing(targetIndex);\r\n            requestAnimationFrame(()=>{\r\n                customChanging.current = false;\r\n                changeAction(targetIndex, CONTROL_INDEX, 1)\r\n            })\r\n        }\r\n    }\r\n    // 跳转到指定的图片位置，index取值[0 ~ length-2]\r\n    const gotoDirectly = (index) => {\r\n        if(customChanging.current || defaultChanging.current) return;\r\n        if(pictureShowing === picturesArr.length - 1 && index === 0) return;\r\n        console.log(index, pictureShowing, picturesArr.length - 1, (pictureShowing) % (picturesArr.length - 1))\r\n        if(pictureShowing === picturesArr.length - 1 ){\r\n            console.log('aaa')\r\n            customChanging.current = true;\r\n            picturesUl.current.classList.remove('ul-transition');\r\n            setPictureShowing(0);\r\n            requestAnimationFrame(() => {\r\n                customChanging.current = false;\r\n                changeAction(index - 1, CONTROL_INDEX, CONTROL_INDEX - 1)\r\n            })\r\n        }else if(index < (pictureShowing) % (picturesArr.length - 1)){\r\n            console.log('bbb')\r\n            lastPicutre(index);\r\n        }else if(index > (pictureShowing) % (picturesArr.length - 1)){\r\n            console.log('ccc')\r\n            nextPictures(index);\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        // 如果有 5 张有效的图片，那么有效索引 realIndex 在 0~4, 但是 pictureShowing 可以取到 5\r\n        const realIndex = pictureShowing >= 5 ? 0 : pictureShowing;\r\n        // 改变底部小圆圈的样式\r\n        let pointsArr = Array.from(circlesContainer.current.childNodes);\r\n        pointsArr.forEach(point => { \r\n            point.style.backgroundColor = \"\";\r\n            point.style.opacity = 0.5;\r\n            point.style.borderColor = '#999'\r\n        })\r\n        pointsArr[realIndex].style.backgroundColor = \"#000\";\r\n        pointsArr[realIndex].style.opacity = 0.6;\r\n        pointsArr[realIndex].style.borderColor = '#000'\r\n        if(defaultChanging.current) defaultChanging.current = false;\r\n    },[pictureShowing])\r\n\r\n    useEffect(()=>{\r\n        // 配置图片懒加载\r\n        const lazyImages = Array.from(picturesUl.current.childNodes).map(e => e.childNodes[0])\r\n        if('IntersectionObserver' in window){  \r\n            lazyImages.forEach(image => { observer.observe(image); });  \r\n        }else{\r\n            lazyImages.forEach(image => { image.src = image.dataset.src; });  \r\n        }\r\n        // 启动轮播图\r\n        requestAnimationFrame(() => {changeAction(0, CONTROL_INDEX, 1)})\r\n    },[])   // 注意，如果没有第二个参数（空数组），那么每次更新都会执行这个副作用。空数组保证只执行一次\r\n\r\nif(useLeftAndRight){\r\n    return (\r\n        <div className=\"outest\" style={(WIDTH && HEIGHT) ? {width:`${WIDTH}px`, height:`${HEIGHT}px`} : {}}\r\n            onMouseOver={() => {setMouseEnter(true)}} onMouseLeave={() => {setMouseEnter(false)}} >\r\n            {/* 向左icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _left\" src=\"left.png\" \r\n                    alt=\"last\" onClick={()=>{gotoDirectly(pictureShowing - 1)}}/> : ''\r\n            }\r\n\r\n            {/* 主要图片 */}\r\n            <ul ref={picturesUl} className='ul-transition' style={{\r\n                transform: `translate(calc(${pictureShowing} * -${WIDTH}px), 0)`\r\n            }}>\r\n            {\r\n                picturesArr.map((e, i) => {\r\n                    return (<li key={i}>\r\n                        <img data-src={e.src} alt={e.alt} loading='lazy'/>\r\n                    </li>)\r\n                })\r\n            }\r\n            </ul>\r\n\r\n            {/* 底部小圆圈的设置 */}\r\n            { useControlPoint ? (<div className='mydiv' ref={circlesContainer}>\r\n                {\r\n                    props.picturesArr.map((e, i) =>{\r\n                        return (<div className={circleOrSquare ? 'circle def' : 'square def'}\r\n                            key={e.index} onClick={()=>{gotoDirectly(i)}}>\r\n                            </div>)\r\n                    })\r\n                }\r\n            </div>) : (<></>)}\r\n\r\n            {/* 向右icon，鼠标进入轮播图区域时才显现 */}\r\n            {\r\n                mouseEnter ? <img className=\"icon _right\" src=\"right.png\" alt=\"next\" \r\n                    onClick={()=>{gotoDirectly(pictureShowing + 1)}}/> : ''\r\n            }\r\n        </div>\r\n    )\r\n}else{\r\n    return (\r\n        <div className=\"outest\" style={(WIDTH && HEIGHT) ? {width:`${WIDTH}px`, height:`${HEIGHT}px`} : {}}>\r\n            {/* 主要图片 */}\r\n            <ul ref={picturesUl} className='ul-transition' style={{\r\n                transform: `translate(calc(${pictureShowing} * -600px), 0)`\r\n            }}>\r\n            {\r\n                picturesArr.map((e, i) => {\r\n                    return (<li key={i}>\r\n                        <img data-src={e.src} alt={e.alt} loading='lazy'/>\r\n                    </li>)\r\n                })\r\n            }\r\n            </ul>\r\n\r\n            {/* 底部小圆圈的设置 */}\r\n            { useControlPoint ? (<div className='mydiv' ref={circlesContainer}>\r\n                {\r\n                    props.picturesArr.map((e, i) =>{\r\n                        return (<div className={circleOrSquare ? 'circle def' : 'square def'}\r\n                            key={e.index} onClick={()=>{gotoDirectly(i)}}>\r\n                            </div>)\r\n                    })\r\n                }\r\n            </div>) : (<></>)}\r\n        </div>\r\n    )\r\n}\r\n})\r\n\r\nexport default SlidePictures;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}